import gmpy2

p = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084171
g = 11717829880366207009516117596335367088558084999998952205599979459063929499736583746670572176471460312928594829675428279466566527115212748467589894601965568
h = 3239475104050450443565264378728065788649097520952449527834792452971981976143292558073856937958553180532878928001494706097394108577585732452307673444020333

def getLeft(i):
	pow_g_x1 = pow(g,i,p)
	pow_g_x1_inv = gmpy2.invert(pow_g_x1,p)
	leftValue = gmpy2.mul(h,pow_g_x1_inv)
	leftValueInZp = gmpy2.f_mod(leftValue,p)
	return leftValueInZp


def getRight(i):
	rightValue = pow(g,2**20*i,p)
	return rightValue


dictory = {}
for i in range(0,2**20):
	dictory[getLeft(i)] = i

for i in range(0,2**20):
	temp = getRight(i)
	if temp in dictory:
		print "x0: ", i
		print "x1: ", dictory[temp]
		#x0_x_B = gmpy2.mul(i,2**20)
		#addValue = gmpy2.add(x0_x_B,dictory[temp])
		#x = gmpy2.f_mod(addValue)
		#print "x: ", x
		break